function [Y,Xf,Af] = PacomeFlexFingerNeuralPredictor(X,~,~)
%PACOMEFLEXFINGERNEURALPREDICTOR neural network simulation function.
%
% Auto-generated by MATLAB, 25-Mar-2022 15:15:44.
% 
% [Y] = PacomeFlexFingerNeuralPredictor(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.0127;7.31e-05;0.0644];
x1_step1.gain = [78.7401574803149;289.800892296947;88.495575221239];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.7240433242020465343;-3.3124354542302856252;-3.2143173230804706897;2.6844205316027260899;-1.2818933797186289336;-2.8672188533615909911;3.4914171515068455065;2.1181673439752946031;-4.1715067387653652631;1.6231490508723469546;1.4891077866248514372;-0.21868730150199200413;-1.9541589646814137016;-0.6098931604591487643;3.273813001060842609;-2.973663595394623993;-1.0470955363691947237;3.3585257171981695024;0.33602813658751862214;2.8996306019277393595;-1.5881280898145764269;0.17406075780397528563;-2.5448619127060725376;5.3034243381630563619;4.9690281038322838825];
IW1_1 = [2.0233879961708360895 1.6234146280242560678 -3.5456195637839265089;2.0921418893541070538 1.8249726222243425333 -2.0064308306857214781;5.1439096650485938156 5.9119228910482020112 1.4827991814541703341;-3.8100716159397514105 -4.7058904792469924416 -1.1135146214943205667;1.5759076833117904304 3.8881767160625062552 -2.9936748073807288861;-1.6568955951138644167 -1.026747049863246275 3.8054681470192663895;-2.639434891026484209 4.1335848782812467661 1.093132353757929387;-1.570645297269934737 -1.5489668794761979331 0.20640112414086742021;1.9468610096848506519 -2.5282228082760895838 -0.093588025655068504682;-6.3077318620065909727 -2.2527349053978191762 -2.5668861746234949983;0.0068349191577215702431 -0.3619721915846929039 2.2385397657507781766;-0.16056582972387389852 1.3592532494226070572 0.19942591233439210807;-6.5489498745366789834 1.8565967667717933054 -3.1562188557884489626;3.2592900795542085746 1.0591306893548688706 1.2570803002915202917;1.7241008025019366467 0.95664376377042048549 3.4043445463784784977;-2.6285039259026001801 -0.47744841065221110821 5.2930726073413554289;-2.9501142336156749302 -3.5173655552007767611 -3.036550150451323038;3.4743778195621284333 -0.30963766536608827717 1.347845158847981839;-0.0074460519296871592598 -0.58376571734009052861 0.85109221322472206062;0.52833413539627760436 -0.62823233888221974297 1.13230719165281557;-0.97055774892522217456 -2.4776254211670907246 0.47871407114186109721;6.673000314066317884 2.221468202057091279 2.4709890518379480362;-0.26679450625993067492 -0.18396082309221312157 -3.1143463037899055124;4.9342328829821022751 -1.1244770920591873331 2.2900426826768014443;2.3041405929423479648 3.6529618622984667553 -0.58010603345934075303];

% Layer 2
b2 = [-0.11419275348663691927;-1.6410725094281100045;0.1348275208339826392];
LW2_1 = [0.16319077120555056104 -0.32877497068770222821 1.1856578678775708813 1.3361436793266889822 0.26887921097203870691 -0.46293888165930835443 -0.19971961543864918953 -0.99751495975515136472 0.61723392594518522447 -1.039550518712475391 -1.7405304031794024411 -1.2116256595254435435 0.070425004116270326082 -2.4657648785926973289 -0.48886069221575739752 0.51333437346907762056 -0.07786025507350148589 0.83198181421476902209 1.2003788286310665967 1.1610016508155456272 0.059218448886514285512 0.89693564368651035323 -1.5552407346511649688 -0.88933162382961383763 -0.25709437794705414237;1.0227587897438248365 -0.91388001454230227694 1.6864182059735610686 1.9153410093171494566 0.085373842505670802239 0.73112014135056369035 0.022719129979175908124 -0.72639994021169629335 0.066337003730576687976 -0.91173534395496036442 3.4595742724679996449 0.013682496818885749729 -0.016883778643347443355 -1.6506793072619170282 0.34471583292962110212 -0.75069639202585580762 0.032808277646043264297 -0.62543526531266246948 -0.35520453569758841939 1.9083281295477658723 -0.29049011502765736958 0.42766197832554281311 2.7947060197560942285 0.5165914089083902816 0.22895922968264259545;-0.1720221547626303582 0.33626283323595701491 -1.1637580378459133623 -1.3105195508537146321 -0.26839930378910403785 0.46434040264809944842 0.19960511577762532487 0.98804912927689858559 -0.61588605254934492006 1.0308123396370634239 1.7333321139095434482 1.210846526508383425 -0.070574915887966799266 2.4492977413226886263 0.4918891458587557608 -0.51656832629648197219 0.077595071792942615918 -0.8365336312203661695 -1.1877873160879697245 -1.183714773765355277 -0.059412097457707327419 -0.8921046879728875556 1.5554729977222034876 0.89352020508395990639 0.25744567072358220949];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.0446209208806305;0.265302213913892;0.0444840838942828];
y1_step1.xoffset = [-48.80952421;-3.924675024;4.007155769];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
